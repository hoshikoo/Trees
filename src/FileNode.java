import java.util.ArrayList;import java.util.Arrays;import java.util.List;/** * Created by Hoshiko on 11/2/15. */public class FileNode {    List<FileNode> childs;    List<FileNode> leafs;    String         data;    String         incrementalPath;    public FileNode(String nodeValue, String incrementalPath) {        childs = new ArrayList<FileNode>();        leafs = new ArrayList<FileNode>();        data = nodeValue;        this. incrementalPath = incrementalPath;    }    public boolean isLeaf() {        return childs.isEmpty() && leafs.isEmpty();    }    public void addElement(String currentPath, String[] list) {        //Avoid first element that can be an empty string if you split a string that has a starting slash as /sd/card/        while( list[0] == null || list[0].equals("") )            list = Arrays.copyOfRange(list, 1, list.length);        FileNode currentChild = new FileNode(list[0], "/"+list[0]);        if ( list.length == 1 ) {            leafs.add( currentChild );            return;        } else {            int index = childs.indexOf( currentChild );            if ( index == -1 ) {                childs.add( currentChild );                currentChild.addElement(currentChild.incrementalPath, Arrays.copyOfRange(list, 1, list.length));            } else {                FileNode nextChild = childs.get(index);                nextChild.addElement(currentChild.incrementalPath, Arrays.copyOfRange(list, 1, list.length));            }        }    }    @Override    public boolean equals(Object obj) {        FileNode cmpObj = (FileNode)obj;        return incrementalPath.equals( cmpObj.incrementalPath ) && data.equals( cmpObj.data );    }    public void printNode( int increment ) {        for (int i = 0; i < increment; i++) {            System.out.print(" ");        }        System.out.println(incrementalPath );        for( FileNode n: childs)            n.printNode(increment+2);        for( FileNode n: leafs)            n.printNode(increment+2);    }    @Override    public String toString() {        return data;    }}